# Generated by Django 5.2.1 on 2025-05-16 08:20

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationBatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "batch_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for the batch.",
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the batch (e.g., 'Welcome campaign').",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who initiated the batch.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "notification batch",
                "verbose_name_plural": "notification batches",
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Unique name for the template (e.g., 'welcome_message').",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Subject for email notifications.",
                        max_length=255,
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Template message with placeholders (e.g., {username})."
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category for grouping templates (e.g., 'system', 'marketing').",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "notification template",
                "verbose_name_plural": "notification templates",
                "indexes": [
                    models.Index(fields=["name"], name="notificatio_name_05069a_idx"),
                    models.Index(
                        fields=["category"], name="notificatio_categor_7eadfe_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "message",
                    models.TextField(help_text="Rendered notification message."),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Subject for email notifications.",
                        max_length=255,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[("LOW", "Low"), ("MED", "Medium"), ("HIGH", "High")],
                        default="MED",
                        help_text="Priority level of the notification.",
                        max_length=10,
                    ),
                ),
                (
                    "channels",
                    models.JSONField(
                        default=list,
                        help_text="List of delivery channels (e.g., ['IN_APP', 'EMAIL']).",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category for grouping notifications (e.g., 'system', 'marketing').",
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        help_text="Delivery status of the notification.",
                        max_length=20,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Custom metadata (e.g., {'link': '/dashboard', 'action': 'view'}).",
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,  # type: ignore
                        help_text="Whether the notification has been read (in-app).",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Optional expiration date for the notification.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Recipient of the notification.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "batch",
                    models.ForeignKey(
                        blank=True,
                        help_text="Batch this notification belongs to, if any.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notifications",
                        to="notifications.notificationbatch",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Optional template used for this notification.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="notifications.notificationtemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "notification",
                "verbose_name_plural": "notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="notificatio_user_id_c62b26_idx",
                    ),
                    models.Index(
                        fields=["is_read"], name="notificatio_is_read_9edb86_idx"
                    ),
                    models.Index(
                        fields=["category"], name="notificatio_categor_fd561f_idx"
                    ),
                    models.Index(
                        fields=["status"], name="notificatio_status_d92267_idx"
                    ),
                    models.Index(
                        fields=["expires_at"], name="notificatio_expires_4f3289_idx"
                    ),
                ],
            },
        ),
    ]

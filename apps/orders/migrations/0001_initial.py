# Generated by Django 5.2.1 on 2025-05-18 06:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("payment", "0001_initial"),
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Discount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the discount", max_length=100),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("fixed", "Fixed Amount"),
                            ("percentage", "Percentage"),
                        ],
                        help_text="Type of discount",
                        max_length=20,
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Discount amount or percentage",
                        max_digits=10,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,  # type: ignore
                        help_text="Is the discount active?",  # type: ignore
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "discount",
                "verbose_name_plural": "discounts",
                "indexes": [
                    models.Index(
                        fields=["is_active"], name="orders_disc_is_acti_2f17a8_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="orders_disc_created_b0751b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Coupon code", max_length=50, unique=True
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(help_text="Start date of coupon validity"),
                ),
                (
                    "valid_until",
                    models.DateTimeField(help_text="End date of coupon validity"),
                ),
                (
                    "max_usage",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum number of uses (null for unlimited)",
                        null=True,
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,  # type: ignore
                        help_text="Number of times the coupon has been used",  # type: ignore
                    ),
                ),
                (
                    "min_order_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Minimum order amount to apply coupon",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "one_per_user",
                    models.BooleanField(
                        default=False,  # type: ignore
                        help_text="Limit to one use per user",  # type: ignore
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,  # type: ignore
                        help_text="Is the coupon active?",  # type: ignore
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "applicable_categories",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Categories this coupon applies to (empty for all)",
                        to="products.category",
                    ),
                ),
                (
                    "discount",
                    models.ForeignKey(
                        help_text="Associated discount",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupons",
                        to="orders.discount",
                    ),
                ),
            ],
            options={
                "verbose_name": "coupon",
                "verbose_name_plural": "coupons",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subtotal_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Subtotal amount before taxes and shipping",
                        max_digits=12,
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Tax amount for the order",
                        max_digits=12,
                    ),
                ),
                (
                    "shipping_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Shipping cost for the order",
                        max_digits=12,
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Discount amount applied to the order",
                        max_digits=12,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount including taxes, shipping, and discounts",
                        max_digits=12,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Current status of the order",
                        max_length=20,
                    ),
                ),
                (
                    "shipping_address",
                    models.TextField(help_text="Shipping address for delivery"),
                ),
                (
                    "billing_address",
                    models.TextField(
                        blank=True,
                        help_text="Billing address, if different from shipping",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional metadata (e.g., payment method, delivery notes)",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        help_text="Applied coupon, if any",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="orders.coupon",
                    ),
                ),
                (
                    "payment",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated payment for the order",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order",
                        to="payment.payment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who placed the order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CouponUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                (
                    "coupon",
                    models.ForeignKey(
                        help_text="Associated coupon",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usages",
                        to="orders.coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who used the coupon",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_usages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Order the coupon was applied to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_usages",
                        to="orders.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "coupon usage",
                "verbose_name_plural": "coupon usages",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(help_text="Quantity ordered")),
                (
                    "price_at_time",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of the variant at the time of order",
                        max_digits=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Parent order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orders.order",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        help_text="Product variant ordered",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productvariant",
                    ),
                ),
            ],
            options={
                "verbose_name": "order item",
                "verbose_name_plural": "order items",
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                        ],
                        help_text="Status at this point",
                        max_length=20,
                    ),
                ),
                (
                    "note",
                    models.TextField(
                        blank=True, help_text="Additional notes for status change"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        help_text="Parent order",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="orders.order",
                    ),
                ),
            ],
            options={
                "verbose_name": "order status history",
                "verbose_name_plural": "order status histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["code", "is_active"], name="orders_coup_code_3a9c8c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["valid_from", "valid_until"],
                name="orders_coup_valid_f_fc9455_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["user", "status"], name="orders_orde_user_id_02a211_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["created_at"], name="orders_orde_created_0e92de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["payment"], name="orders_orde_payment_59dc0b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="couponusage",
            index=models.Index(
                fields=["coupon", "user"], name="orders_coup_coupon__b8b4d6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="couponusage",
            index=models.Index(
                fields=["applied_at"], name="orders_coup_applied_e89892_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(
                fields=["order", "variant"], name="orders_orde_order_i_c8de3b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderstatushistory",
            index=models.Index(
                fields=["order", "status"], name="orders_orde_order_i_6f7e72_idx"
            ),
        ),
    ]
